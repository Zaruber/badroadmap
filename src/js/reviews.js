import { supabase, DB_TABLES, FILTER_TYPES, MAX_FILE_SIZE, SUPPORTED_IMAGE_TYPES } from './config.js';
import mapManager from './map.js';

class ReviewManager {
    constructor() {
        this.reviews = new Map();
        this.currentFilter = FILTER_TYPES.DATE;
        this.supabase = supabase; // –≠–∫—Å–ø–æ—Ä—Ç–∏—Ä—É–µ–º supabase –¥–ª—è –¥–æ—Å—Ç—É–ø–∞ –∏–∑ –¥—Ä—É–≥–∏—Ö –º–æ–¥—É–ª–µ–π
    }

    // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –º–µ–Ω–µ–¥–∂–µ—Ä–∞ –æ—Ç–∑—ã–≤–æ–≤
    async init() {
        try {
            await this.loadReviews();
            this.addEventListeners();
        } catch (error) {
            console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ –º–µ–Ω–µ–¥–∂–µ—Ä–∞ –æ—Ç–∑—ã–≤–æ–≤:', error);
        }
    }

    // –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤ —Å–æ–±—ã—Ç–∏–π
    addEventListeners() {
        // –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–ª–∏–∫–∞ –ø–æ –∫–∞—Ä—Ç–µ
        document.addEventListener('map:clicked', (e) => {
            this.showAddReviewModal(e.detail.lat, e.detail.lng);
        });

        // –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ —Ñ–æ—Ä–º—ã –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –æ—Ç–∑—ã–≤–∞
        document.getElementById('addMarkForm').addEventListener('submit', async (e) => {
            e.preventDefault();
            await this.handleReviewSubmit(e.target);
        });
    }

    // –ó–∞–≥—Ä—É–∑–∫–∞ –æ—Ç–∑—ã–≤–æ–≤ –∏–∑ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
    async loadReviews() {
        try {
            // –ó–∞–≥—Ä—É–∂–∞–µ–º –æ—Ç–∑—ã–≤—ã
            const { data, error } = await supabase
                .from(DB_TABLES.REVIEWS)
                .select(`
                    *,
                    likes (count)
                `)
                .order('created_at', { ascending: false });

            if (error) throw error;

            // –û—á–∏—â–∞–µ–º —Ç–µ–∫—É—â–∏–µ –æ—Ç–∑—ã–≤—ã –∏ –º–∞—Ä–∫–µ—Ä—ã
            this.reviews.clear();
            
            if (data) {
                // –î–æ–±–∞–≤–ª—è–µ–º –Ω–æ–≤—ã–µ –æ—Ç–∑—ã–≤—ã –∏ –º–∞—Ä–∫–µ—Ä—ã
                data.forEach(review => {
                    this.reviews.set(review.id, {
                        ...review,
                        likes: { count: review.likes?.length || 0 }
                    });
                    mapManager.addMarker(
                        review.id,
                        review.latitude,
                        review.longitude,
                        this.createReviewPreview(review)
                    );
                });
            }

            this.updateReviewsList();
        } catch (error) {
            console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ –æ—Ç–∑—ã–≤–æ–≤:', error);
        }
    }

    // –°–æ–∑–¥–∞–Ω–∏–µ –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã—Ö —Ç–∞–±–ª–∏—Ü –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö
    async createTables() {
        try {
            // –°–æ–∑–¥–∞–µ–º —Ç–∞–±–ª–∏—Ü—É –æ—Ç–∑—ã–≤–æ–≤
            await supabase.rpc('create_reviews_table');
            
            // –°–æ–∑–¥–∞–µ–º —Ç–∞–±–ª–∏—Ü—É –ª–∞–π–∫–æ–≤
            await supabase.rpc('create_likes_table');
        } catch (error) {
            console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ —Ç–∞–±–ª–∏—Ü:', error);
            throw error;
        }
    }

    // –°–æ–∑–¥–∞–Ω–∏–µ –ø—Ä–µ–≤—å—é –æ—Ç–∑—ã–≤–∞ –¥–ª—è –º–∞—Ä–∫–µ—Ä–∞
    createReviewPreview(review) {
        return `
            <div class="review-preview">
                <p class="review-preview__text">${review.text.substring(0, 100)}${review.text.length > 100 ? '...' : ''}</p>
                <div class="review-preview__meta">
                    <span class="review-preview__date">${new Date(review.created_at).toLocaleDateString()}</span>
                    <span class="review-preview__likes">üëç ${review.likes?.count || 0}</span>
                </div>
            </div>
        `;
    }

    // –ü–æ–∫–∞–∑ –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –æ–∫–Ω–∞ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –æ—Ç–∑—ã–≤–∞
    showAddReviewModal(lat, lng) {
        const modal = document.getElementById('addMarkModal');
        modal.classList.add('is-active');
        
        // –°–æ—Ö—Ä–∞–Ω—è–µ–º –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç—ã –≤ data-–∞—Ç—Ä–∏–±—É—Ç–∞—Ö —Ñ–æ—Ä–º—ã
        const form = document.getElementById('addMarkForm');
        form.dataset.lat = lat;
        form.dataset.lng = lng;
    }

    // –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ —Ñ–æ—Ä–º—ã –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –æ—Ç–∑—ã–≤–∞
    async handleReviewSubmit(form) {
        try {
            const text = form.querySelector('#reviewText').value;
            const photoInput = form.querySelector('#photoUpload');
            const lat = parseFloat(form.dataset.lat);
            const lng = parseFloat(form.dataset.lng);

            // –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ñ–∞–π–ª–∞
            let photoUrl = null;
            if (photoInput.files.length > 0) {
                const file = photoInput.files[0];
                
                // –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ä–∞–∑–º–µ—Ä–∞ –∏ —Ñ–æ—Ä–º–∞—Ç–∞
                if (file.size > MAX_FILE_SIZE) {
                    throw new Error('–§–∞–π–ª —Å–ª–∏—à–∫–æ–º –±–æ–ª—å—à–æ–π. –ú–∞–∫—Å–∏–º–∞–ª—å–Ω—ã–π —Ä–∞–∑–º–µ—Ä: 5MB');
                }
                if (!SUPPORTED_IMAGE_TYPES.includes(file.type)) {
                    throw new Error('–ù–µ–ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ–º—ã–π —Ñ–æ—Ä–º–∞—Ç —Ñ–∞–π–ª–∞. –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ JPEG –∏–ª–∏ PNG');
                }

                try {
                    // –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º —É–Ω–∏–∫–∞–ª—å–Ω–æ–µ –∏–º—è —Ñ–∞–π–ª–∞
                    const fileExt = file.name.split('.').pop();
                    const fileName = `${Date.now()}-${Math.random().toString(36).substring(7)}.${fileExt}`;

                    // –ó–∞–≥—Ä—É–∑–∫–∞ —Ñ–∞–π–ª–∞ –≤ storage
                    const { data: uploadData, error: uploadError } = await supabase.storage
                        .from('reviews-photos')
                        .upload(`public/${fileName}`, file, {
                            cacheControl: '3600',
                            upsert: false
                        });

                    if (uploadError) throw uploadError;

                    // –ü–æ–ª—É—á–∞–µ–º –ø—É–±–ª–∏—á–Ω—ã–π URL —Ñ–∞–π–ª–∞
                    const { data } = supabase.storage
                        .from('reviews-photos')
                        .getPublicUrl(`public/${fileName}`);

                    photoUrl = `public/${fileName}`;
                } catch (uploadError) {
                    console.error('–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ —Ñ–∞–π–ª–∞:', uploadError);
                    throw new Error('–ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–≥—Ä—É–∑–∏—Ç—å —Ñ–æ—Ç–æ. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑.');
                }
            }

            // –°–æ–∑–¥–∞–Ω–∏–µ –æ—Ç–∑—ã–≤–∞ –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö
            const { data, error } = await supabase
                .from(DB_TABLES.REVIEWS)
                .insert([{
                    text,
                    photo_url: photoUrl,
                    latitude: lat,
                    longitude: lng
                }])
                .select()
                .single();

            if (error) throw error;

            // –î–æ–±–∞–≤–ª—è–µ–º –æ—Ç–∑—ã–≤ –≤ –ª–æ–∫–∞–ª—å–Ω—É—é –∫–æ–ª–ª–µ–∫—Ü–∏—é
            const review = {
                ...data,
                likes: { count: 0 }
            };
            this.reviews.set(review.id, review);
            
            // –î–æ–±–∞–≤–ª—è–µ–º –º–∞—Ä–∫–µ—Ä –Ω–∞ –∫–∞—Ä—Ç—É
            mapManager.addMarker(review.id, lat, lng, this.createReviewPreview(review));

            // –û–±–Ω–æ–≤–ª—è–µ–º —Å–ø–∏—Å–æ–∫ –æ—Ç–∑—ã–≤–æ–≤
            this.updateReviewsList();

            // –ó–∞–∫—Ä—ã–≤–∞–µ–º –º–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ
            document.getElementById('addMarkModal').classList.remove('is-active');
            form.reset();

        } catch (error) {
            console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –¥–æ–±–∞–≤–ª–µ–Ω–∏–∏ –æ—Ç–∑—ã–≤–∞:', error);
            alert(error.message || '–ù–µ —É–¥–∞–ª–æ—Å—å –¥–æ–±–∞–≤–∏—Ç—å –æ—Ç–∑—ã–≤. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑.');
        }
    }

    // –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Å–ø–∏—Å–∫–∞ –æ—Ç–∑—ã–≤–æ–≤ —Å —É—á–µ—Ç–æ–º —Ñ–∏–ª—å—Ç—Ä–∞
    updateReviewsList() {
        const container = document.getElementById('reviewsList');
        const reviews = Array.from(this.reviews.values());

        // –°–æ—Ä—Ç–∏—Ä—É–µ–º –ø–æ –¥–∞—Ç–µ (—Å–∞–º—ã–µ –Ω–æ–≤—ã–µ —Å–≤–µ—Ä—Ö—É)
        reviews.sort((a, b) => new Date(b.created_at) - new Date(a.created_at));

        // –û–±–Ω–æ–≤–ª—è–µ–º DOM
        container.innerHTML = reviews.map(review => `
            <article class="review" data-id="${review.id}" data-lat="${review.latitude}" data-lng="${review.longitude}">
                ${review.photo_url ? `
                    <img class="review__photo" src="${supabase.storage.from('reviews-photos').getPublicUrl(review.photo_url).data.publicUrl}" alt="–§–æ—Ç–æ –∫ –æ—Ç–∑—ã–≤—É" loading="lazy">
                ` : ''}
                <p class="review__text">${review.text}</p>
                <div class="review__meta">
                    <span class="review__date">${new Date(review.created_at).toLocaleDateString()}</span>
                    <span class="review__likes">üëç ${review.likes?.count || 0}</span>
                </div>
            </article>
        `).join('');

        // –î–æ–±–∞–≤–ª—è–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –∫–ª–∏–∫–∞ –Ω–∞ –æ—Ç–∑—ã–≤—ã
        container.querySelectorAll('.review').forEach(reviewElement => {
            reviewElement.addEventListener('click', () => {
                const id = reviewElement.dataset.id;
                const lat = parseFloat(reviewElement.dataset.lat);
                const lng = parseFloat(reviewElement.dataset.lng);
                
                // –¶–µ–Ω—Ç—Ä–∏—Ä—É–µ–º –∫–∞—Ä—Ç—É –Ω–∞ –º–∞—Ä–∫–µ—Ä–µ
                mapManager.centerOnMarker(id);
                
                // –û—Ç–∫—Ä—ã–≤–∞–µ–º –ø–æ–ø–∞–ø –º–∞—Ä–∫–µ—Ä–∞
                mapManager.openMarkerPopup(id);
                
                // –î–æ–±–∞–≤–ª—è–µ–º –∫–ª–∞—Å—Å –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏ –¥–ª—è –æ—Ç–∑—ã–≤–∞
                container.querySelectorAll('.review').forEach(el => el.classList.remove('review--active'));
                reviewElement.classList.add('review--active');
            });
        });
    }

    // –û–±—Ä–∞–±–æ—Ç–∫–∞ –ª–∞–π–∫–∞ –æ—Ç–∑—ã–≤–∞
    async handleLike(reviewId) {
        try {
            const { data, error } = await supabase
                .from(DB_TABLES.LIKES)
                .insert([{ review_id: reviewId }]);

            if (error) throw error;

            // –û–±–Ω–æ–≤–ª—è–µ–º –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –ª–∞–π–∫–æ–≤ –≤ –ª–æ–∫–∞–ª—å–Ω–æ–π –∫–æ–ª–ª–µ–∫—Ü–∏–∏
            const review = this.reviews.get(reviewId);
            if (review) {
                review.likes = { count: (review.likes?.count || 0) + 1 };
                this.reviews.set(reviewId, review);
                
                // –û–±–Ω–æ–≤–ª—è–µ–º –º–∞—Ä–∫–µ—Ä –∏ —Å–ø–∏—Å–æ–∫
                mapManager.updateMarker(reviewId, this.createReviewPreview(review));
                this.updateReviewsList();
            }
        } catch (error) {
            console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –¥–æ–±–∞–≤–ª–µ–Ω–∏–∏ –ª–∞–π–∫–∞:', error);
            alert('–ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ—Å—Ç–∞–≤–∏—Ç—å –ª–∞–π–∫. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑.');
        }
    }
}

// –°–æ–∑–¥–∞–µ–º –∏ —ç–∫—Å–ø–æ—Ä—Ç–∏—Ä—É–µ–º —ç–∫–∑–µ–º–ø–ª—è—Ä –º–µ–Ω–µ–¥–∂–µ—Ä–∞ –æ—Ç–∑—ã–≤–æ–≤
const reviewManager = new ReviewManager();
export default reviewManager; 